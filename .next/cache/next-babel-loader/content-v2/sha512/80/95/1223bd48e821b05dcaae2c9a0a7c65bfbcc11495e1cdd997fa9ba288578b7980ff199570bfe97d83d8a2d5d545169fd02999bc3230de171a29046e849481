{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/poliakovarthur/Projects/threekit/front/components/metal-door/ColorSlider.js\";\nimport { useState, useEffect } from \"react\";\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from \"pure-react-carousel\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nexport default function ColorSlider({\n  colors,\n  onChange,\n  attrName\n}) {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(1);\n  const {\n    0: slides,\n    1: setSlides\n  } = useState([]);\n  const updatedColors = colors.length > 0 && colors.map(c => {\n    let color;\n\n    switch (c.name) {\n      case \"Standard White NCS S 0502-Y\":\n        color = \"#E2E2E2\";\n        break;\n\n      case \"Red NCS S4050 R\":\n        color = \"#764D4B\";\n        break;\n\n      case \"Red NCS S2570-Y90R\":\n        color = \"#A84038\";\n        break;\n\n      case \"Red NCS S4550-Y80R\":\n        color = \"#53261F\";\n        break;\n\n      case \"Blue NCS S6020-B10G\":\n        color = \"#596969\";\n        break;\n\n      case \"Blue S6030-R70B\":\n        color = \"#253471\";\n        break;\n\n      case \"Blue NCS S5030-R90B\":\n        color = \"#274997\";\n        break;\n\n      case \"Green NCS S6020-B70G\":\n        color = \"#48686C\";\n        break;\n\n      case \"Green S6020-G30Y\":\n        color = \"#3E5F3C\";\n        break;\n\n      case \"Gray S3500-N\":\n        color = \"#838890\";\n        break;\n\n      case \"Gray NCS S7000-N\":\n        color = \"#5B5B63\";\n        break;\n\n      case \"White NCSS0500 N\":\n        color = \"#5B5B63\";\n        break;\n\n      case \"White\":\n        color = \"#e4e4e4\";\n        break;\n\n      case \"Silver\":\n        color = \"#A9A9A9\";\n        break;\n\n      case \"Black\":\n        color = \"#2C2C2C\";\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      name: c.name,\n      _id: c._id,\n      color\n    };\n  });\n  useEffect(() => {\n    setSlides(updatedColors);\n  }, [colors.length]);\n  let windowWidth;\n\n  if (false) {\n    windowWidth = window.innerWidth;\n  }\n\n  const slidesToShow = windowWidth <= 500 ? 2 : 2;\n\n  const handleSlide = currentSlide => {\n    setCurrentSlide(currentSlide + 1);\n    window.configurator.setConfiguration({\n      Material: slideToShow.name\n    });\n  };\n\n  const slideToShow = colors.length > 0 && colors.find(slide => {\n    return slide._id === currentSlide;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product__prop__color col-3-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"product__prop__color__text\",\n      children: attrName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `product__prop__color__content ${slides.length < 4 ? \"jcspa\" : \"\"}`,\n      children: [slides.length > 3 && /*#__PURE__*/_jsxDEV(CarouselProvider, {\n        totalSlides: slides.length,\n        visibleSlides: slidesToShow,\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          children: slides.map(s => /*#__PURE__*/_jsxDEV(Slide, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => onChange({\n                name: s.name,\n                _id: s._id,\n                attr: attrName\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  background: s.color,\n                  height: \"46px\",\n                  width: \"46px\",\n                  borderRadius: \"50%\"\n                },\n                className: \"product__prop__arrow__main__text color-circle\"\n              }, s.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonBack, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product__prop__arrow__main__color\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/static/images/arrow.svg\",\n              className: \"product__prop__arrow__main__color__left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonNext, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product__prop__arrow__main__color\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/static/images/arrow.svg\",\n              className: \"product__prop__arrow__main__color__right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), slides.length < 4 && slides.map(v => /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => onChange({\n          name: v.name,\n          _id: v._id,\n          attr: attrName\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            background: v.color,\n            height: \"46px\",\n            width: \"46px\",\n            borderRadius: \"50%\"\n          },\n          className: \"product__prop__arrow__main__text color-circle\"\n        }, v, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/poliakovarthur/Projects/threekit/front/components/metal-door/ColorSlider.js"],"names":["useState","useEffect","CarouselProvider","Slider","Slide","ButtonBack","ButtonNext","ColorSlider","colors","onChange","attrName","currentSlide","setCurrentSlide","slides","setSlides","updatedColors","length","map","c","color","name","_id","windowWidth","window","innerWidth","slidesToShow","handleSlide","configurator","setConfiguration","Material","slideToShow","find","slide","s","attr","background","height","width","borderRadius","v"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext,\n} from \"pure-react-carousel\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\n\nexport default function ColorSlider({ colors, onChange, attrName }) {\n  const [currentSlide, setCurrentSlide] = useState(1);\n  const [slides, setSlides] = useState([]);\n\n  const updatedColors =\n    colors.length > 0 &&\n    colors.map((c) => {\n      let color;\n      switch (c.name) {\n        case \"Standard White NCS S 0502-Y\":\n          color = \"#E2E2E2\";\n          break;\n        case \"Red NCS S4050 R\":\n          color = \"#764D4B\";\n          break;\n        case \"Red NCS S2570-Y90R\":\n          color = \"#A84038\";\n          break;\n        case \"Red NCS S4550-Y80R\":\n          color = \"#53261F\";\n          break;\n        case \"Blue NCS S6020-B10G\":\n          color = \"#596969\";\n          break;\n        case \"Blue S6030-R70B\":\n          color = \"#253471\";\n          break;\n        case \"Blue NCS S5030-R90B\":\n          color = \"#274997\";\n          break;\n        case \"Green NCS S6020-B70G\":\n          color = \"#48686C\";\n          break;\n        case \"Green S6020-G30Y\":\n          color = \"#3E5F3C\";\n          break;\n        case \"Gray S3500-N\":\n          color = \"#838890\";\n          break;\n        case \"Gray NCS S7000-N\":\n          color = \"#5B5B63\";\n          break;\n        case \"White NCSS0500 N\":\n          color = \"#5B5B63\";\n          break;\n        case \"White\":\n          color = \"#e4e4e4\";\n          break;\n        case \"Silver\":\n          color = \"#A9A9A9\";\n          break;\n        case \"Black\":\n          color = \"#2C2C2C\";\n          break;\n        default:\n          break;\n      }\n      return {\n        name: c.name,\n        _id: c._id,\n        color,\n      };\n    });\n\n  useEffect(() => {\n    setSlides(updatedColors);\n  }, [colors.length]);\n\n  let windowWidth;\n\n  if (process.browser) {\n    windowWidth = window.innerWidth;\n  }\n\n  const slidesToShow = windowWidth <= 500 ? 2 : 2;\n\n  const handleSlide = (currentSlide) => {\n    setCurrentSlide(currentSlide + 1);\n    window.configurator.setConfiguration({ Material: slideToShow.name });\n  };\n  const slideToShow =\n    colors.length > 0 &&\n    colors.find((slide) => {\n      return slide._id === currentSlide;\n    });\n\n  return (\n    <div className=\"product__prop__color col-3-5\">\n      <p className=\"product__prop__color__text\">{attrName}</p>\n      <div\n        className={`product__prop__color__content ${\n          slides.length < 4 ? \"jcspa\" : \"\"\n        }`}\n      >\n        {slides.length > 3 && (\n          <CarouselProvider\n            totalSlides={slides.length}\n            visibleSlides={slidesToShow}\n          >\n            <Slider>\n              {slides.map((s) => (\n                <Slide>\n                  <a\n                    onClick={() =>\n                      onChange({ name: s.name, _id: s._id, attr: attrName })\n                    }\n                  >\n                    <p\n                      key={s.name}\n                      style={{\n                        background: s.color,\n                        height: \"46px\",\n                        width: \"46px\",\n                        borderRadius: \"50%\",\n                      }}\n                      className=\"product__prop__arrow__main__text color-circle\"\n                    ></p>\n                  </a>\n                </Slide>\n              ))}\n            </Slider>\n            <ButtonBack>\n              <p className=\"product__prop__arrow__main__color\">\n                <img\n                  src=\"/static/images/arrow.svg\"\n                  className=\"product__prop__arrow__main__color__left\"\n                />\n              </p>\n            </ButtonBack>\n            <ButtonNext>\n              <p className=\"product__prop__arrow__main__color\">\n                <img\n                  src=\"/static/images/arrow.svg\"\n                  className=\"product__prop__arrow__main__color__right\"\n                />\n              </p>\n            </ButtonNext>\n          </CarouselProvider>\n        )}\n        {slides.length < 4 &&\n          slides.map((v) => (\n            <a\n              onClick={() =>\n                onChange({ name: v.name, _id: v._id, attr: attrName })\n              }\n            >\n              <p\n                key={v}\n                style={{\n                  background: v.color,\n                  height: \"46px\",\n                  width: \"46px\",\n                  borderRadius: \"50%\",\n                }}\n                className=\"product__prop__arrow__main__text color-circle\"\n              ></p>\n            </a>\n          ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}